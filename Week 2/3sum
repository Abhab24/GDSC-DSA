 vector<vector<int>> threeSum(vector<int>& nums) {
        int n = nums.size();
        vector<vector<int>> result;
        if(n<3) return result;
        
        sort(nums.begin(),nums.end());
        
        for(int i=0;i<n-2;i++){
            int pair_sum = 0 - nums[i];
            int l = i+1;
            int r = n-1;
            while(l<r){
                int sum = nums[l]+nums[r];
                if(sum==pair_sum){
                    vector<int> triplet(3,0);
                    triplet[0] = nums[i];
                    triplet[1] = nums[l];
                    triplet[2] = nums[r];
                    result.push_back(triplet);
                    
                    while(l<r && nums[l]==triplet[1]) l++;
                    while(l<r && nums[r]==triplet[2]) r--;
                }
                else if(sum<pair_sum) l++;
                else r--;
            }
            while(i+1<n && nums[i+1]==nums[i]) i++;
        }
        return result;
    }
